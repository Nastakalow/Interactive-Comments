{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Boris\\\\Desktop\\\\Interactive-Comments\\\\src\\\\context\\\\InteractiveComments.js\",\n  _s = $RefreshSig$();\nimport { createContext, useReducer } from \"react\";\nimport Data from \"../data.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MyContext = /*#__PURE__*/createContext();\nconst {\n  comments\n} = Data;\nconst initialState = {\n  comments,\n  lastId: 4,\n  isReply: {\n    1: false,\n    2: false,\n    3: false\n  },\n  isDeleteConfirm: {\n    id: null,\n    status: false\n  }\n};\nconst reducer = (state, action) => {\n  var _comments2, _comments4, _comments6, _comments8, _comments10;\n  switch (action.type) {\n    case \"addComment\":\n      var comments = [...state.comments];\n      var lastId = state.lastId;\n      var newComment = {\n        id: ++lastId,\n        content: action.payload,\n        createdAt: new Date().toISOString().slice(0, 10),\n        score: 0,\n        user: {\n          image: {\n            png: \"./images/avatars/image-juliusomo.png\",\n            webp: \"./images/avatars/image-juliusomo.webp\"\n          },\n          username: \"juliusomo\"\n        },\n        editabled: false\n      };\n      comments.push(newComment);\n      return {\n        ...state,\n        comments,\n        lastId\n      };\n    case \"setReplyInput\":\n      switch (action.payload) {\n        case 1:\n          var isReply = {\n            ...state.isReply\n          };\n          isReply[1] = !isReply[1];\n          return {\n            ...state,\n            isReply\n          };\n        case 2:\n          var isReply = {\n            ...state.isReply\n          };\n          isReply[2] = !isReply[2];\n          return {\n            ...state,\n            isReply\n          };\n        case 3:\n          var isReply = {\n            ...state.isReply\n          };\n          isReply[3] = !isReply[3];\n          return {\n            ...state,\n            isReply\n          };\n        default:\n          return state;\n      }\n    case \"replyComment\":\n      var comments = [...state.comments];\n      var comment;\n      var lastId = state.lastId;\n      var isReply = {\n        ...state.isReply\n      };\n      var id = action.payload.id;\n      var replyTo = id === 1 ? \"amyrobson\" : id === 2 ? \"maxblagun\" : id === 3 ? \"ramsesmiron\" : \"\";\n      var newReplyComment = {\n        id: ++lastId,\n        content: action.payload.value,\n        createdAt: new Date().toISOString().slice(0, 10),\n        score: 0,\n        replyingTo: replyTo,\n        user: {\n          image: {\n            png: \"./images/avatars/image-juliusomo.png\",\n            webp: \"./images/avatars/image-juliusomo.webp\"\n          },\n          username: \"juliusomo\"\n        },\n        editabled: false\n      };\n      comment = comments.filter(item => item.id === action.payload.id)[0];\n      isReply[action.payload.id] = !isReply[action.payload.id];\n      if (!comment) {\n        var _comments;\n        (_comments = comments) === null || _comments === void 0 ? void 0 : _comments.forEach(com => {\n          if (com.replies) {\n            comment = com.replies.filter(item => item.id === action.payload.id)[0];\n          }\n        });\n      }\n      comment.replies.push(newReplyComment);\n      return {\n        ...state,\n        comments,\n        lastId,\n        isReply\n      };\n    case \"increment\":\n      var comments = [...state.comments];\n      let incComment;\n      if ((_comments2 = comments) !== null && _comments2 !== void 0 && _comments2.some(item => item.id === action.payload)) {\n        incComment = comments.filter(item => item.id === action.payload)[0];\n      } else {\n        var _comments3;\n        (_comments3 = comments) === null || _comments3 === void 0 ? void 0 : _comments3.forEach(comment => {\n          var _comment$replies;\n          if (incComment) {\n            return incComment;\n          }\n          if ((_comment$replies = comment.replies) !== null && _comment$replies !== void 0 && _comment$replies.some(reply => reply.id === action.payload)) {\n            incComment = comment.replies.filter(reply => reply.id === action.payload)[0];\n          } else {\n            var _comment$replies2;\n            (_comment$replies2 = comment.replies) === null || _comment$replies2 === void 0 ? void 0 : _comment$replies2.forEach(replyItem => {\n              if (replyItem.replies) {\n                incComment = replyItem.replies.filter(item => item.id === action.payload)[0];\n              }\n            });\n          }\n        });\n      }\n      incComment.score++;\n      return {\n        ...state,\n        comments\n      };\n    case \"decrement\":\n      var comments = [...state.comments];\n      let decComment;\n      if ((_comments4 = comments) !== null && _comments4 !== void 0 && _comments4.some(item => item.id === action.payload)) {\n        decComment = comments.filter(item => item.id === action.payload)[0];\n      } else {\n        var _comments5;\n        (_comments5 = comments) === null || _comments5 === void 0 ? void 0 : _comments5.forEach(comment => {\n          var _comment$replies3;\n          if (decComment) {\n            return decComment;\n          }\n          if ((_comment$replies3 = comment.replies) !== null && _comment$replies3 !== void 0 && _comment$replies3.some(reply => reply.id === action.payload)) {\n            decComment = comment.replies.filter(reply => reply.id === action.payload)[0];\n          } else {\n            var _comment$replies4;\n            (_comment$replies4 = comment.replies) === null || _comment$replies4 === void 0 ? void 0 : _comment$replies4.forEach(replyItem => {\n              if (replyItem.replies) {\n                decComment = replyItem.replies.filter(item => item.id === action.payload)[0];\n              }\n            });\n          }\n        });\n      }\n      decComment.score--;\n      return {\n        ...state,\n        comments\n      };\n    case \"showDeleteConfirm\":\n      var isDeleteConfirm = state.isDeleteConfirm;\n      isDeleteConfirm = {\n        id: action.payload,\n        status: true\n      };\n      return {\n        ...state,\n        isDeleteConfirm\n      };\n    case \"closeDeleteConfirm\":\n      var isDeleteConfirm = state.isDeleteConfirm;\n      isDeleteConfirm.status = false;\n      return {\n        ...state,\n        isDeleteConfirm\n      };\n    case \"deleteComment\":\n      var comments = [...state.comments];\n      var isDeleteConfirm = {\n        ...state.isDeleteConfirm\n      };\n      var id = isDeleteConfirm.id;\n      if ((_comments6 = comments) !== null && _comments6 !== void 0 && _comments6.some(item => item.id === id)) {\n        comments = comments.filter(item => item.id !== id);\n      } else {\n        var _comments7;\n        (_comments7 = comments) === null || _comments7 === void 0 ? void 0 : _comments7.forEach(comment => {\n          var _comment$replies5;\n          if ((_comment$replies5 = comment.replies) !== null && _comment$replies5 !== void 0 && _comment$replies5.some(reply => reply.id === id)) {\n            comment.replies = comment.replies.filter(reply => reply.id !== id);\n          } else {\n            var _comment$replies6;\n            (_comment$replies6 = comment.replies) === null || _comment$replies6 === void 0 ? void 0 : _comment$replies6.forEach(replyItem => {\n              if (replyItem.replies) {\n                replyItem.replies = replyItem.replies.filter(item => item.id !== id);\n              }\n            });\n          }\n        });\n      }\n      isDeleteConfirm.status = false;\n      return {\n        ...state,\n        comments,\n        isDeleteConfirm\n      };\n    case \"editComment\":\n      var comments = [...state.comments];\n      let editComment;\n      if ((_comments8 = comments) !== null && _comments8 !== void 0 && _comments8.some(item => item.id === action.payload)) {\n        editComment = comments.filter(item => item.id === action.payload)[0];\n      } else {\n        var _comments9;\n        (_comments9 = comments) === null || _comments9 === void 0 ? void 0 : _comments9.forEach(comment => {\n          var _comment$replies7;\n          if (editComment) {\n            return editComment;\n          }\n          if ((_comment$replies7 = comment.replies) !== null && _comment$replies7 !== void 0 && _comment$replies7.some(reply => reply.id === action.payload)) {\n            editComment = comment.replies.filter(reply => reply.id === action.payload)[0];\n          } else {\n            var _comment$replies8;\n            (_comment$replies8 = comment.replies) === null || _comment$replies8 === void 0 ? void 0 : _comment$replies8.forEach(replyItem => {\n              if (replyItem.replies) {\n                editComment = replyItem.replies.filter(item => item.id === action.payload)[0];\n              }\n            });\n          }\n        });\n      }\n      editComment.editabled = !editComment.editabled;\n      return {\n        ...state,\n        comments\n      };\n    case \"updateComment\":\n      var comments = [...state.comments];\n      let updateContent;\n      if ((_comments10 = comments) !== null && _comments10 !== void 0 && _comments10.some(item => item.id === action.payload.id)) {\n        updateContent = comments.filter(item => item.id === action.payload.id)[0];\n      } else {\n        var _comments11;\n        (_comments11 = comments) === null || _comments11 === void 0 ? void 0 : _comments11.forEach(comment => {\n          var _comment$replies9;\n          if (updateContent) {\n            return updateContent;\n          }\n          if ((_comment$replies9 = comment.replies) !== null && _comment$replies9 !== void 0 && _comment$replies9.some(reply => reply.id === action.payload.id)) {\n            updateContent = comment.replies.filter(reply => reply.id === action.payload.id)[0];\n          } else {\n            var _comment$replies10;\n            (_comment$replies10 = comment.replies) === null || _comment$replies10 === void 0 ? void 0 : _comment$replies10.forEach(replyItem => {\n              if (replyItem.replies) {\n                updateContent = replyItem.replies.filter(item => item.id === action.payload.id)[0];\n              }\n            });\n          }\n        });\n      }\n      updateContent.content = action.payload.value;\n      updateContent.editabled = !updateContent.editabled;\n      return {\n        ...state,\n        comments\n      };\n    default:\n      return state;\n  }\n};\nfunction InteractiveComments(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n    value: [state, dispatch],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 331,\n    columnNumber: 5\n  }, this);\n}\n_s(InteractiveComments, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = InteractiveComments;\nexport default InteractiveComments;\nvar _c;\n$RefreshReg$(_c, \"InteractiveComments\");","map":{"version":3,"names":["createContext","useReducer","Data","MyContext","comments","initialState","lastId","isReply","isDeleteConfirm","id","status","reducer","state","action","type","newComment","content","payload","createdAt","Date","toISOString","slice","score","user","image","png","webp","username","editabled","push","comment","replyTo","newReplyComment","value","replyingTo","filter","item","forEach","com","replies","incComment","some","reply","replyItem","decComment","editComment","updateContent","InteractiveComments","children","dispatch"],"sources":["C:/Users/Boris/Desktop/Interactive-Comments/src/context/InteractiveComments.js"],"sourcesContent":["import { createContext, useReducer } from \"react\";\r\nimport Data from \"../data.json\";\r\n\r\nexport const MyContext = createContext();\r\n\r\nconst { comments } = Data;\r\n\r\nconst initialState = {\r\n  comments,\r\n  lastId: 4,\r\n  isReply: {\r\n    1: false,\r\n    2: false,\r\n    3: false,\r\n  },\r\n  isDeleteConfirm: {\r\n    id: null,\r\n    status: false,\r\n  },\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"addComment\":\r\n      var comments = [...state.comments];\r\n      var lastId = state.lastId;\r\n      var newComment = {\r\n        id: ++lastId,\r\n        content: action.payload,\r\n        createdAt: new Date().toISOString().slice(0, 10),\r\n        score: 0,\r\n        user: {\r\n          image: {\r\n            png: \"./images/avatars/image-juliusomo.png\",\r\n            webp: \"./images/avatars/image-juliusomo.webp\",\r\n          },\r\n          username: \"juliusomo\",\r\n        },\r\n        editabled: false,\r\n      };\r\n\r\n      comments.push(newComment);\r\n\r\n      return {\r\n        ...state,\r\n        comments,\r\n        lastId,\r\n      };\r\n\r\n    case \"setReplyInput\":\r\n      switch (action.payload) {\r\n        case 1:\r\n          var isReply = { ...state.isReply };\r\n          isReply[1] = !isReply[1];\r\n          return {\r\n            ...state,\r\n            isReply,\r\n          };\r\n\r\n        case 2:\r\n          var isReply = { ...state.isReply };\r\n          isReply[2] = !isReply[2];\r\n          return {\r\n            ...state,\r\n            isReply,\r\n          };\r\n\r\n        case 3:\r\n          var isReply = { ...state.isReply };\r\n          isReply[3] = !isReply[3];\r\n          return {\r\n            ...state,\r\n            isReply,\r\n          };\r\n\r\n        default:\r\n          return state;\r\n      }\r\n\r\n    case \"replyComment\":\r\n      var comments = [...state.comments];\r\n      var comment;\r\n      var lastId = state.lastId;\r\n      var isReply = { ...state.isReply };\r\n      var id = action.payload.id;\r\n      var replyTo =\r\n        id === 1\r\n          ? \"amyrobson\"\r\n          : id === 2\r\n          ? \"maxblagun\"\r\n          : id === 3\r\n          ? \"ramsesmiron\"\r\n          : \"\";\r\n      var newReplyComment = {\r\n        id: ++lastId,\r\n        content: action.payload.value,\r\n        createdAt: new Date().toISOString().slice(0, 10),\r\n        score: 0,\r\n        replyingTo: replyTo,\r\n        user: {\r\n          image: {\r\n            png: \"./images/avatars/image-juliusomo.png\",\r\n            webp: \"./images/avatars/image-juliusomo.webp\",\r\n          },\r\n          username: \"juliusomo\",\r\n        },\r\n        editabled: false,\r\n      };\r\n\r\n      comment = comments.filter((item) => item.id === action.payload.id)[0];\r\n\r\n      isReply[action.payload.id] = !isReply[action.payload.id];\r\n\r\n      if (!comment) {\r\n        comments?.forEach((com) => {\r\n          if (com.replies) {\r\n            comment = com.replies.filter(\r\n              (item) => item.id === action.payload.id\r\n            )[0];\r\n          }\r\n        });\r\n      }\r\n\r\n      comment.replies.push(newReplyComment);\r\n\r\n      return {\r\n        ...state,\r\n        comments,\r\n        lastId,\r\n        isReply,\r\n      };\r\n\r\n    case \"increment\":\r\n      var comments = [...state.comments];\r\n      let incComment;\r\n\r\n      if (comments?.some((item) => item.id === action.payload)) {\r\n        incComment = comments.filter((item) => item.id === action.payload)[0];\r\n      } else {\r\n        comments?.forEach((comment) => {\r\n          if (incComment) {\r\n            return incComment;\r\n          }\r\n          if (comment.replies?.some((reply) => reply.id === action.payload)) {\r\n            incComment = comment.replies.filter(\r\n              (reply) => reply.id === action.payload\r\n            )[0];\r\n          } else {\r\n            comment.replies?.forEach((replyItem) => {\r\n              if (replyItem.replies) {\r\n                incComment = replyItem.replies.filter(\r\n                  (item) => item.id === action.payload\r\n                )[0];\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n\r\n      incComment.score++;\r\n\r\n      return {\r\n        ...state,\r\n        comments,\r\n      };\r\n\r\n    case \"decrement\":\r\n      var comments = [...state.comments];\r\n      let decComment;\r\n\r\n      if (comments?.some((item) => item.id === action.payload)) {\r\n        decComment = comments.filter((item) => item.id === action.payload)[0];\r\n      } else {\r\n        comments?.forEach((comment) => {\r\n          if (decComment) {\r\n            return decComment;\r\n          }\r\n          if (comment.replies?.some((reply) => reply.id === action.payload)) {\r\n            decComment = comment.replies.filter(\r\n              (reply) => reply.id === action.payload\r\n            )[0];\r\n          } else {\r\n            comment.replies?.forEach((replyItem) => {\r\n              if (replyItem.replies) {\r\n                decComment = replyItem.replies.filter(\r\n                  (item) => item.id === action.payload\r\n                )[0];\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n\r\n      decComment.score--;\r\n\r\n      return {\r\n        ...state,\r\n        comments,\r\n      };\r\n    case \"showDeleteConfirm\":\r\n      var isDeleteConfirm = state.isDeleteConfirm;\r\n      isDeleteConfirm = {\r\n        id: action.payload,\r\n        status: true,\r\n      };\r\n      return {\r\n        ...state,\r\n        isDeleteConfirm,\r\n      };\r\n    case \"closeDeleteConfirm\":\r\n      var isDeleteConfirm = state.isDeleteConfirm;\r\n      isDeleteConfirm.status = false;\r\n      return {\r\n        ...state,\r\n        isDeleteConfirm,\r\n      };\r\n    case \"deleteComment\":\r\n      var comments = [...state.comments];\r\n      var isDeleteConfirm = { ...state.isDeleteConfirm };\r\n      var id = isDeleteConfirm.id;\r\n\r\n      if (comments?.some((item) => item.id === id)) {\r\n        comments = comments.filter((item) => item.id !== id);\r\n      } else {\r\n        comments?.forEach((comment) => {\r\n          if (comment.replies?.some((reply) => reply.id === id)) {\r\n            comment.replies = comment.replies.filter(\r\n              (reply) => reply.id !== id\r\n            );\r\n          } else {\r\n            comment.replies?.forEach((replyItem) => {\r\n              if (replyItem.replies) {\r\n                replyItem.replies = replyItem.replies.filter(\r\n                  (item) => item.id !== id\r\n                );\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n\r\n      isDeleteConfirm.status = false;\r\n\r\n      return {\r\n        ...state,\r\n        comments,\r\n        isDeleteConfirm,\r\n      };\r\n\r\n    case \"editComment\":\r\n      var comments = [...state.comments];\r\n      let editComment;\r\n\r\n      if (comments?.some((item) => item.id === action.payload)) {\r\n        editComment = comments.filter((item) => item.id === action.payload)[0];\r\n      } else {\r\n        comments?.forEach((comment) => {\r\n          if (editComment) {\r\n            return editComment;\r\n          }\r\n          if (comment.replies?.some((reply) => reply.id === action.payload)) {\r\n            editComment = comment.replies.filter(\r\n              (reply) => reply.id === action.payload\r\n            )[0];\r\n          } else {\r\n            comment.replies?.forEach((replyItem) => {\r\n              if (replyItem.replies) {\r\n                editComment = replyItem.replies.filter(\r\n                  (item) => item.id === action.payload\r\n                )[0];\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n\r\n      editComment.editabled = !editComment.editabled;\r\n\r\n      return {\r\n        ...state,\r\n        comments,\r\n      };\r\n\r\n    case \"updateComment\":\r\n      var comments = [...state.comments];\r\n      let updateContent;\r\n\r\n      if (comments?.some((item) => item.id === action.payload.id)) {\r\n        updateContent = comments.filter(\r\n          (item) => item.id === action.payload.id\r\n        )[0];\r\n      } else {\r\n        comments?.forEach((comment) => {\r\n          if (updateContent) {\r\n            return updateContent;\r\n          }\r\n          if (\r\n            comment.replies?.some((reply) => reply.id === action.payload.id)\r\n          ) {\r\n            updateContent = comment.replies.filter(\r\n              (reply) => reply.id === action.payload.id\r\n            )[0];\r\n          } else {\r\n            comment.replies?.forEach((replyItem) => {\r\n              if (replyItem.replies) {\r\n                updateContent = replyItem.replies.filter(\r\n                  (item) => item.id === action.payload.id\r\n                )[0];\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n\r\n      updateContent.content = action.payload.value;\r\n      updateContent.editabled = !updateContent.editabled;\r\n\r\n      return {\r\n        ...state,\r\n        comments,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nfunction InteractiveComments({ children }) {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  return (\r\n    <MyContext.Provider value={[state, dispatch]}>\r\n      {children}\r\n    </MyContext.Provider>\r\n  );\r\n}\r\n\r\nexport default InteractiveComments;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}